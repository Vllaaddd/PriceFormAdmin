generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

model Calculation{
    id Int @id @default(autoincrement())

    creator String
    title String
    roll String
    material String
    materialWidth Int
    materialThickness Float?
    materialLength Int?
    materialColor String
    otherProperties String
    skilletFormat String
    skilletKnife String?
    skilletDensity Int?
    boxType String
    boxColor String
    boxPrint String
    boxExecution String
    lochstanzlinge String?
    rollsPerCarton Int
    antislidePaperSheets String
    cartonPerPallet Int
    totalOrderInRolls Int
    totalOrderInPallets Float
    period String
    deliveryConditions String
    deliveryAddress String
    referenceArticle String?
    remarks String?
    density Int?
    typeOfProduct String?
    rollLength String?
    sheetWidth String?
    sheetLength String?
    sheetQuantity Int?
    materialCost Float
    WVPerRoll Float
    core String?
    corePrice Float?
    skillet String?
    skilletPrice Float?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Line{
    id Int @id @default(autoincrement())

    materialType String
    length Float
    totalDuration Int
    totalMeters Float
    avSpeed Int
    rollLength String
    processingTime Float
    costPerMin Float
    valuePerRoll Float
    lineType String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MaterialProperty{
    id Int @id @default(autoincrement())

    material String
    density String?
    costPerKg String

    periodId Int?
    period Period? @relation(fields: [periodId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Skillet{
    id Int @id @default(autoincrement())

    format Int
    knife String
    density Int
    smallPrice Float
    mediumPrice Float
    largePrice Float
    smallDescription String
    mediumDescription String
    largeDescription String
    article String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Core{
    id Int @id @default(autoincrement())

    length Int
    width Float
    thickness Float
    type String?
    price Float
    article String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Period{
    id Int @id @default(autoincrement())

    period String
    startDate DateTime
    endDate DateTime

    materials MaterialProperty[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model EmailRecipient {
    id        Int      @id @default(autoincrement())
    name      String
    email     String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id String @id
    name String
    email String @unique
    emailVerified Boolean @default(false)
    image String?
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    sessions Session[]
    accounts Account[]

    @@map("user")
}

model Session {
    id String @id
    expiresAt DateTime
    token String @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    ipAddress String?
    userAgent String?
    userId String
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("session")
}

model Account {
    id String @id
    accountId String
    providerId String
    userId String
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken String?
    refreshToken String?
    idToken String?
    accessTokenExpiresAt DateTime?
    refreshTokenExpiresAt DateTime?
    scope String?
    password String?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    @@map("account")
}

model Verification {
    id String @id
    identifier String
    value String
    expiresAt DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    @@map("verification")
}